{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","ReactDOM","render","document","querySelector"],"mappings":"2MAKaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAgB5C,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACGJ,EAAWK,OAAOC,OAAO,IAC1BR,GAAc,SAAAS,GAAU,OAAGP,GAAH,mBAAiBO,OACzCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAlBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,QCPlBG,EAAc,SAAC,GAAmB,EAAlBC,GAAmB,IAAhBC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAGlC,OACI,sBAAKC,UAAU,+CAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCNHK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbN,EADa,iDACoCO,UAAUF,GAD9C,+DAEAG,MAAMR,GAFN,cAEbS,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAQ,CACJhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAKc,EAAIC,OAAOC,iBAAiBhB,QATtB,kBAYZY,GAZY,4CAAH,sDCIPK,EAAU,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECHb,SAACA,GAAa,IAAD,EAEXrB,mBAAS,CAC/B2B,KAAK,GACLO,SAAQ,IAJyB,mBAE9BC,EAF8B,KAEvBC,EAFuB,KAmBrC,OAZAC,qBAAU,WACNjB,EAAQC,GACPiB,MAAK,SAAAC,GACFC,YAAW,WACPJ,EAAS,CACLT,KAAMY,EACNL,SAAS,MAEf,UAEP,CAAEb,IAEEc,EDdwBM,CAAapB,GAAhCU,EAFyB,EAE9BJ,KAAaO,EAFiB,EAEjBA,QAGpB,OACI,qCACI,oBAAIjB,UAAU,+CAAd,SAA8DI,IAG1Da,GAAW,mBAAGjB,UAAU,wCAAb,qBAGf,qBAAKA,UAAU,YAAf,SAGQc,EAAOF,KAAI,SAACC,GAAD,OACP,cAAC,EAAD,eAEQA,GADCA,EAAIhB,aEUtB4B,EA9BM,WAAI,MAIe1C,mBAAS,CAAC,YAJzB,mBAIdQ,EAJc,KAIFT,EAJE,KAUrB,OACI,qCACI,8CACA,uBAEA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAEOS,EAAWqB,KAAK,SAACR,GAAD,OACZ,cAAC,EAAD,CAECA,SAAUA,GADHA,YCnB/BsB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,cAAc,Y","file":"static/js/main.04871ce5.chunk.js","sourcesContent":["\r\n\r\nimport React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if ( inputValue.trim().length>2){\r\n            setCategories(categories=>[inputValue,...categories]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n    \r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    \r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__bounceInLeft\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\nexport const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=wE6grRxwR72Dmt8zg47J3gp26UeFj7Vn`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return ({\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        })\r\n    });\r\n    return gifs;\r\n}","import React from 'react'\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__lightSpeedInRight\">{category}</h3>\r\n            \r\n            {\r\n                loading && <p className=\"animate__animated animate__backInDown\">Loading</p>\r\n            }\r\n\r\n            <div className=\"card-grid\">\r\n\r\n                {\r\n                    images.map((img) => (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) =>{\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n        .then(imgs => {\r\n            setTimeout(()=>{\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            },3000)\r\n        })\r\n    }, [ category ])\r\n\r\n    return state;\r\n\r\n}\r\n\r\n","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = ()=>{\r\n\r\n    // const categories = ['Saikano', 'Samurai X', 'My Hero Academia'];\r\n    \r\n    const [categories, setCategories] = useState(['Pokemon']);\r\n    \r\n    // const handleAdd = ()=>{\r\n    //     \r\n    // }\r\n\r\n    return(\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <hr/>\r\n            {/* <button onClick={handleAdd}>Agregar</button> */}\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <ol>\r\n               { \r\n                   categories.map( (category) =>(\r\n                       <GifGrid \r\n                        key = {category}\r\n                        category={category} \r\n                       />\r\n                   ))\r\n                } \r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}